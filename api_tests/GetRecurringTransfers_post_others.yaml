# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4


# RoostTestHash=7e03af5a84

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "GetRecurringTransfers_post_others.csv"
    fields:
      - "koreUserId"
      - "botId"
      - "userCode"
      - "accountId"
      - "customerId"
      - "status"
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 5

scenarios:
  - name: "Test non-success API responses"
    flow:
      - log: "Test case: Unauthorized request"
        post:
          url: "/GetRecurringTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "InvalidToken"
          json:
            customerId: "{{ customerId }}"
            status: "{{ status }}"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
        think: 5

      - log: "Test case: Not Found"
        post:
          url: "/InvalidUrl"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            status: "{{ status }}"
          expect:
            - statusCode: 404
            - hasProperty: "err.message"
        think: 5

      - log: "Test case: Invalid Request Payload"
        post:
          url: "/GetRecurringTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            invalidKey: "invalidValue"
          expect:
            - statusCode: 400
        think: 5
