# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4

# Test generated for /GetTransactions_post for http method type POST in artillery framework
# RoostTestHash=207beafabe

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "GetTransactions_post_success.csv"
    fields:
      - "koreUserId"
      - "botId"
      - "accountId"
      - "Authorization"
      - "X-Auth-token"
      - "X-CORRELATION-ID"
      - "customerId"
      - "accountNumber"
      - "numOfTransactions"
      - "status"
      - "startDate"
      - "endDate"
      - "sortType"
      - "sortValue"
      - "transactionAmount1"
      - "transactionAmount"
      - "transactionCurrency"
      - "categoryCodeType"
      - "categoryValue"
      - "categorySource"
      - "debitOrCredit"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Get Transactions"
    flow:
      - post:
          url: "/GetTransactions"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          json:
            customerId: "{{ customerId }}"
            accountNumber: ["{{ accountNumber }}"]
            numOfTransactions: "{{ numOfTransactions }}"
            status: "{{ status }}"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            sort:
              type: "{{ sortType }}"
              value: "{{ sortValue }}"
            transactionAmount:
              amount1: "{{ transactionAmount1 }}"
              amount: "{{ transactionAmount }}"
              currency: "{{ transactionCurrency }}"
            category:
              - codeType: "{{ categoryCodeType }}"
                value: ["{{ categoryValue }}"]
                source: "{{ categorySource }}"
            debitOrCredit: "{{ debitOrCredit }}"
          expect:
            - statusCode: 200
            - hasProperty: "customerId"
            - hasProperty: "transactionId"
            - hasProperty: "accountNumber"
            - hasProperty: "timestamp"
            - hasProperty: "amount"
            - hasProperty: "currency"
            - hasProperty: "debitOrCredit"
            - hasProperty: "description"
            - hasProperty: "paymentMode"
            - hasProperty: "DBANames"
            - hasProperty: "status"
            - hasProperty: "transactionType"
            - hasProperty: "MCCCode"
            - hasProperty: "name"
            - hasProperty: "address"
            - hasProperty: "street"
            - hasProperty: "city"
            - hasProperty: "state"
            - hasProperty: "zip"
            - hasProperty: "country"
            - hasProperty: "phoneNumber"
          log: "POST /GetTransactions"
      - think: 1
