# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4

# RoostTestHash=b38ec5fe10

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "GetCCSchedule_post_others.csv"
    fields:
      - "koreUserId"
      - "botId"
      - "accountId"
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "Test GetCCSchedule API endpoint"
    flow:
      - log: "Testing with invalid url"
        post:
          url: "/invalidURL"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: 1045300
            status: "Pending"
          expect:
            - statusCode: 404
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1
      - log: "Testing with invalid authorization token"
        post:
          url: "/GetCCSchedule"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "invalid_token"
          json:
            customerId: 1045300
            status: "Pending"
          expect:
            - statusCode: 401
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1
      - log: "Testing with missing required header parameters"
        post:
          url: "/GetCCSchedule"
          headers:
            koreUserId: "{{ koreUserId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: 1045300
            status: "Pending"
          expect:
            - statusCode: 400
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1
      - log: "Testing with invalid payload"
        post:
          url: "/GetCCSchedule"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "invalid"
            status: "Unknown"
          expect:
            - statusCode: 400
            - hasProperty: "err"
            - hasProperty: "err.message"
