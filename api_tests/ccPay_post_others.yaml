# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4


# RoostTestHash=c6fa681866

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "ccPay_post_others.csv"
    fields:
      - "customerId"
      - "amount"
      - "currency"
      - "sourceAccountId"
      - "targetAccountId"
      - "transactionType"
      - "dueDate"
    skipHeader: true

scenarios:
  - name: "Testing non-success API responses"
    flow:
      - log: "Sending POST request with invalid payload"
        post:
          url: "/ccPay"
          json:
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            transactionType: "{{ transactionType }}"
            dueDate: "{{ dueDate }}"
          headers:
            koreUserId: "invalid"
            botId: "invalid"
            accountId: "invalid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Sending POST request with invalid authorization token"
        post:
          url: "/ccPay"
          json:
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            transactionType: "{{ transactionType }}"
            dueDate: "{{ dueDate }}"
          headers:
            koreUserId: "valid"
            botId: "valid"
            accountId: "valid"
            Authorization: "invalid"
          expect:
            - statusCode: 401
      - think: 1

      - log: "Sending POST request to invalid URL"
        post:
          url: "/invalidURL"
          json:
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            transactionType: "{{ transactionType }}"
            dueDate: "{{ dueDate }}"
          headers:
            koreUserId: "valid"
            botId: "valid"
            accountId: "valid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
