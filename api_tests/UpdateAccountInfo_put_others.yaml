# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4

# RoostTestHash=adb57fbf1b

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "UpdateAccountInfo_put_others.csv"
    fields:
      - "koreUserId"
      - "botId"
      - "accountId"
      - "Authorization"
      - "X-Auth-token"
      - "X-CORRELATION-ID"
      - "accountNumber"
      - "customerId"
      - "email"
      - "alternatePhoneNumber"
      - "isAlternateMobileNumber"
      - "phone"
      - "isPrimaryMobileNumber"
      - "location"
      - "isStatement"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "UpdateAccountInfo API failure cases"
    flow:
      - log: "Sending request with invalid URL"
        put:
          url: "/InvalidURL"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ Authorization }}"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          json:
            accountNumber: "{{ accountNumber }}"
            customerId: "{{ customerId }}"
            email: "{{ email }}"
            alternatePhoneNumber: "{{ alternatePhoneNumber }}"
            isAlternateMobileNumber: "{{ isAlternateMobileNumber }}"
            phone: "{{ phone }}"
            isPrimaryMobileNumber: "{{ isPrimaryMobileNumber }}"
            location: "{{ location }}"
            isStatement: "{{ isStatement }}"
          expect:
            - statusCode: 404
            - hasProperty: "err.message"
            - equals: ["headers.content-type", "application/json"]
        think: 1

      - log: "Sending request with invalid authorization token"
        put:
          url: "/UpdateAccountInfo"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "InvalidToken"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          json:
            accountNumber: "{{ accountNumber }}"
            customerId: "{{ customerId }}"
            email: "{{ email }}"
            alternatePhoneNumber: "{{ alternatePhoneNumber }}"
            isAlternateMobileNumber: "{{ isAlternateMobileNumber }}"
            phone: "{{ phone }}"
            isPrimaryMobileNumber: "{{ isPrimaryMobileNumber }}"
            location: "{{ location }}"
            isStatement: "{{ isStatement }}"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
            - equals: ["headers.content-type", "application/json"]
        think: 1

      - log: "Sending request with missing required field (accountNumber)"
        put:
          url: "/UpdateAccountInfo"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ Authorization }}"
            X-Auth-token: "{{ X-Auth-token }}"
            X-CORRELATION-ID: "{{ X-CORRELATION-ID }}"
          json:
            customerId: "{{ customerId }}"
            email: "{{ email }}"
            alternatePhoneNumber: "{{ alternatePhoneNumber }}"
            isAlternateMobileNumber: "{{ isAlternateMobileNumber }}"
            phone: "{{ phone }}"
            isPrimaryMobileNumber: "{{ isPrimaryMobileNumber }}"
            location: "{{ location }}"
            isStatement: "{{ isStatement }}"
          expect:
            - statusCode: 400
            - hasProperty: "err.message"
            - equals: ["headers.content-type", "application/json"]
        think: 1
