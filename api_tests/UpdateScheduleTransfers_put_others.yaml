# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4


# RoostTestHash=c0505709a3

config:
  target: "{{ $processEnvironment.API_HOST }}"
  processor: "./my-processor.js"
  plugins:
    expect: {}
  payload:
    path: "UpdateScheduleTransfers_put_others.csv"
    fields:
      - "paymentId"
      - "customerId"
      - "amount"
      - "scheduledDate"
      - "sourceAccountId"
      - "targetAccountId"
    skipHeader: true

scenarios:
  - name: "Testing API failure cases"
    flow:
      - log: "Sending request with invalid URL"
        put:
          url: "/InvalidURL"
          headers:
            koreUserId: "invalid"
            botId: "invalid"
            userCode: "invalid"
            accountId: "invalid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 404
            - hasProperty: "err.message"
      - think: 5

      - log: "Sending request with invalid auth token"
        put:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: "valid"
            botId: "valid"
            userCode: "valid"
            accountId: "valid"
            Authorization: "InvalidToken"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
      - think: 5

      - log: "Sending request with missing required fields in payload"
        put:
          url: "/UpdateScheduleTransfers"
          headers:
            koreUserId: "valid"
            botId: "valid"
            userCode: "valid"
            accountId: "valid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: ""
            targetAccountId: ""
          expect:
            - statusCode: 400
            - hasProperty: "err.message"
      - think: 5
