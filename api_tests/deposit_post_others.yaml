# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4


# RoostTestHash=70db6d5eac

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "deposit_post_others.csv"
    fields:
      - "customerId"
      - "sourceAccountId"
      - "amount"
      - "currency"
      - "frontImage"
      - "backImage"
    skipHeader: true

scenarios:
  - name: "Non-success API response scenario"
    flow:
      - log: "Sending a request with missing required headers"
        post:
          url: "/deposit"
          headers:
            koreUserId: "missing"
            botId: "missing"
            accountId: "missing"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 401
            - hasProperty: "err"
            - equals:
                message: "Error: Authorisation failed."
      - think: 5

      - log: "Sending a request to an invalid URL"
        post:
          url: "/invalid_url"
          headers:
            koreUserId: "valid"
            botId: "valid"
            accountId: "valid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 404
            - hasProperty: "err"
            - equals:
                message: "Error: Not Found"
      - think: 5

      - log: "Sending a request with an invalid auth token"
        post:
          url: "/deposit"
          headers:
            koreUserId: "valid"
            botId: "valid"
            accountId: "valid"
            Authorization: "invalid_token"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 401
            - hasProperty: "err"
            - equals:
                message: "Error: Authorisation failed."
      - think: 5
