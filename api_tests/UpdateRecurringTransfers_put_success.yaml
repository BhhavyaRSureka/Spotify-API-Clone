# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4


# Test generated for /UpdateRecurringTransfers_put for http method type PUT in artillery framework

# RoostTestHash=d94103a8c3


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "UpdateRecurringTransfers_put_success.csv"
    fields: ["koreUserId", "botId", "userCode", "accountId", "Authorization", "paymentId", "customerId", "amount", "scheduledDate", "sourceAccountId", "targetAccountId", "amountType", "frequencyDurationUntilStop", "frequencyDurationUntilDate", "frequencyDurationNumberOfTransfers", "frequencyIterate", "updateTransferType"]
    skipHeader: true
  http:
    pool: 10

scenarios:
  - name: "Update Recurring Transfers"
    flow:
      - post:
          url: "/UpdateRecurringTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }} {{ Authorization }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            recurringOptions:
              amountType: "{{ amountType }}"
              frequency:
                duration:
                  untilStop: "{{ frequencyDurationUntilStop }}"
                  untilDate: "{{ frequencyDurationUntilDate }}"
                  numberOfTransfers: "{{ frequencyDurationNumberOfTransfers }}"
                iterate: "{{ frequencyIterate }}"
            updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 200
            - hasProperty: "content"
          beforeRequest:
            - log: "Sending request to update recurring transfers"
        think: 1
