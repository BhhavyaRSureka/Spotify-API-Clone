# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4

# RoostTestHash=a16706fdab

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "disputeTransaction_post_others.csv"
    fields:
      - "customerId"
      - "emailId"
      - "transactionId"
      - "reasonCode"
    skipHeader: true
  plugins:
    expect: {}
scenarios:
  - name: "Dispute Transaction API test"
    flow:
      - log: "Testing with invalid URL"
        post:
          url: "/disputeTransaction_invalid"
          headers:
            koreUserId: "testUser"
            botId: "testBot"
            accountId: "testAccount"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            emailId: "{{ emailId }}"
            transactionsData:
              - transactionId: "{{ transactionId }}"
                reasonCode: "{{ reasonCode }}"
          expect:
            - statusCode: 404
            - hasProperty: "err.message"
        think: 1
      - log: "Testing with invalid Authorization token"
        post:
          url: "/disputeTransaction"
          headers:
            koreUserId: "testUser"
            botId: "testBot"
            accountId: "testAccount"
            Authorization: "invalidToken"
          json:
            customerId: "{{ customerId }}"
            emailId: "{{ emailId }}"
            transactionsData:
              - transactionId: "{{ transactionId }}"
                reasonCode: "{{ reasonCode }}"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
        think: 1
      - log: "Testing with missing required header field"
        post:
          url: "/disputeTransaction"
          headers:
            koreUserId: "testUser"
            botId: "testBot"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            emailId: "{{ emailId }}"
            transactionsData:
              - transactionId: "{{ transactionId }}"
                reasonCode: "{{ reasonCode }}"
          expect:
            - statusCode: 400
        think: 1
      - log: "Testing with missing required body field"
        post:
          url: "/disputeTransaction"
          headers:
            koreUserId: "testUser"
            botId: "testBot"
            accountId: "testAccount"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            transactionsData:
              - transactionId: "{{ transactionId }}"
                reasonCode: "{{ reasonCode }}"
          expect:
            - statusCode: 400
        think: 1
