# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4


# RoostTestHash=b9ae237532

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "AddRecurringTransfers_post_others.csv"
    fields: ["customerId", "amount", "sourceAccountId", "targetAccountId", "currency", "status", "scheduledDate", "amountType", "iterate", "untilStop", "untilDate", "numberOfTransfers"]
    skipHeader: true
  phases:
    - duration: 60
      arrivalRate: 5
  variables:
    authToken: "{{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "AddRecurringTransfers - Non-success scenarios"
    flow:
      - log: "Testing with invalid Authorization token"
        post:
          url: "/AddRecurringTransfers"
          headers:
            koreUserId: "wrongUser"
            botId: "wrongBot"
            userCode: "wrongCode"
            accountId: "wrongAccount"
            Authorization: "wrongToken"
          json:
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            currency: "{{ currency }}"
            status: "{{ status }}"
            scheduledDate: "{{ scheduledDate }}"
            recurringOptions:
              amountType: "{{ amountType }}"
              frequency:
                iterate: "{{ iterate }}"
                duration:
                  untilStop: "{{ untilStop }}"
                  untilDate: "{{ untilDate }}"
                  numberOfTransfers: "{{ numberOfTransfers }}"
          expect:
            - statusCode: 401
            - hasProperty: "err.message"
      - think: 1
      - log: "Testing with missing required header"
        post:
          url: "/AddRecurringTransfers"
          headers:
            koreUserId: "testUser"
            userCode: "testCode"
            accountId: "testAccount"
            Authorization: "{{ authToken }}"
          json:
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            currency: "{{ currency }}"
            status: "{{ status }}"
            scheduledDate: "{{ scheduledDate }}"
            recurringOptions:
              amountType: "{{ amountType }}"
              frequency:
                iterate: "{{ iterate }}"
                duration:
                  untilStop: "{{ untilStop }}"
                  untilDate: "{{ untilDate }}"
                  numberOfTransfers: "{{ numberOfTransfers }}"
          expect:
            - statusCode: 404
            - hasProperty: "err.message"
      - think: 1
