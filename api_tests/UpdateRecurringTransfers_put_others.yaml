# Test generated by RoostGPT for test Testing12345 using AI Type Open AI and AI Model gpt-4


# RoostTestHash=d94103a8c3

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "UpdateRecurringTransfers_put_others.csv"
    fields:
      - "paymentId"
      - "customerId"
      - "amount"
      - "scheduledDate"
      - "sourceAccountId"
      - "targetAccountId"
      - "amountType"
      - "frequency"
      - "updateTransferType"
    skipHeader: true
  environments:
    dev:
      target: "{{ $processEnvironment.API_HOST }}"
      http:
        timeout: 10

scenarios:
  - name: Non-success API response scenario
    flow:
      - log: "Sending invalid request with missing required headers"
        put:
          url: "/UpdateRecurringTransfers"
          headers:
            koreUserId: "invalidUserId"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            recurringOptions:
              amountType: "{{ amountType }}"
              frequency: "{{ frequency }}"
              updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 401
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1

      - log: "Sending request with invalid URL"
        put:
          url: "/InvalidRecurringTransfers"
          headers:
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            userCode: "{{ userCode }}"
            accountId: "{{ accountId }}"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            paymentId: "{{ paymentId }}"
            customerId: "{{ customerId }}"
            amount: "{{ amount }}"
            scheduledDate: "{{ scheduledDate }}"
            sourceAccountId: "{{ sourceAccountId }}"
            targetAccountId: "{{ targetAccountId }}"
            recurringOptions:
              amountType: "{{ amountType }}"
              frequency: "{{ frequency }}"
              updateTransferType: "{{ updateTransferType }}"
          expect:
            - statusCode: 404
            - hasProperty: "err"
            - hasProperty: "err.message"
      - think: 1
