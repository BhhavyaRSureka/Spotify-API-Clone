// Test generated by RoostGPT for test Spotify-Test using AI Type Open AI and AI Model gpt-4

package com.csc301.profilemicroservice;

import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.neo4j.driver.v1.Driver;
import org.neo4j.driver.v1.Session;
import org.neo4j.driver.v1.Transaction;
import org.neo4j.driver.v1.StatementResult;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.any;
import static org.mockito.Mockito.times;

public class PlaylistDriverImpl_addSong_74339575f8_Test {

    @Mock
    private Driver driver;

    @Mock
    private Session session;

    @Mock
    private Transaction transaction;

    @Mock
    private StatementResult result;

    private PlaylistDriverImpl playlistDriverImpl;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        playlistDriverImpl = new PlaylistDriverImpl(driver);
    }

    @Test
    public void testAddSongSuccess() {
        when(driver.session()).thenReturn(session);
        when(session.writeTransaction(any())).thenReturn(result);

        DbQueryStatus dbQueryStatus = playlistDriverImpl.addSong("song1", "songName1");

        assertEquals("POST", dbQueryStatus.getdbQueryMethod());
        assertEquals(DbQueryExecResult.QUERY_OK, dbQueryStatus.getdbQueryExecResult());

        verify(session, times(1)).writeTransaction(any());
        verify(session, times(1)).close();
    }

    @Test
    public void testAddSongFailure() {
        when(driver.session()).thenThrow(new RuntimeException());

        DbQueryStatus dbQueryStatus = playlistDriverImpl.addSong("song2", "songName2");

        assertEquals("POST", dbQueryStatus.getdbQueryMethod());
        assertEquals(DbQueryExecResult.QUERY_ERROR_GENERIC, dbQueryStatus.getdbQueryExecResult());
    }
}
